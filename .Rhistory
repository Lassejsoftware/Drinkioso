View(dfOut)
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/", launch.browser = T)
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
getTeam(users)
getTeam(users, opts = "num")
dfOut
sapply(dfOut[,2:ncol(dfOut)], function(cs){names(cs)})
dfOut = subset(score, tolower(score$col) == "black" & score$isBar == T, select = c("venue_name", users))
# FIX THIS SHIT!
for (i in users){
dfOut[[i]] = dfOut[[i]]*getTeam(i,opts="num")
}
View(dfOut)
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
tableOutput
=tableOutput
?tableOutput
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
matrix(scoreExp$val, nrow = 256,ncol=256 )
bleh = matrix(scoreExp$val, nrow = 256,ncol=256 )
image(bleh)
image(bleh^2)
image(bleh)
View(score)
grep("lasse", score$venue_name,ignore.case = T)
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
BREAKS = c(seq(-40,40,by=10),-5,5,1,-1,-0.1,0.1)
CL <- contourLines(unique(scoreExp$x) , unique(scoreExp$y) , mapList$mapImage, levels = BREAKS)
levCL = sapply(CL, function(cs){cs$level})
## EXTRACT CONTOUR LINE LEVELS
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
## CONVERT CONTOUR LINES TO POLYGONS
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
fillO = 0.5*rep.int(1, length(LEVS))
LEVS2 =  as.numeric(as.character(LEVS)) # Sometimes R!
fillO[LEVS2==0]=0
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>%
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
#
mapList = createMap(score, cph, lambda = 650)
#
score = mapList$score
score$col = "blue"
score$col[score$val>0] = "green"
scoreExp = mapList$scoreExp
# Make labels
users = dir("checkinHist/")
users = gsub("\\..*", "", users)
team = ifelse(score$val>0, "Green", "Blue")
inds = which(names(score) %in% users)
drinker = c()
num = c()
for (i in 1:dim(score)[1]){
drinker[i] = names(which.max(score[i,inds]))
num[i] = max(score[i,inds])
}
label = paste0("<b> Venue: </b>", score$venue_name, " owned by team <b>", team,  "</b> <br/>",
"<b> Venue score is:  </b>", abs(score$val) , "<br/>",
"<b> Best team player: </b>", drinker, " with ", num, " beers!"
)
score$label = label
BREAKS = c(seq(-40,40,by=10),-5,5,1,-1,-0.1,0.1)
CL <- contourLines(unique(scoreExp$x) , unique(scoreExp$y) , mapList$mapImage, levels = BREAKS)
levCL = sapply(CL, function(cs){cs$level})
## EXTRACT CONTOUR LINE LEVELS
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
## CONVERT CONTOUR LINES TO POLYGONS
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
fillO = 0.5*rep.int(1, length(LEVS))
LEVS2 =  as.numeric(as.character(LEVS)) # Sometimes R!
fillO[LEVS2==0]=0
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>%
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
View(CL)
levCL
levCL == 0
## CONVERT CONTOUR LINES TO POLYGONS
CL = CL[levCL != 0]
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
fillO = 0.5*rep.int(1, length(LEVS))
LEVS2 =  as.numeric(as.character(LEVS)) # Sometimes R!
fillO[LEVS2==0]=0
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>%
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
BREAKS = c(seq(-40,40,by=10),-5,5,1,-1,-0.1,0.1)
CL <- contourLines(unique(scoreExp$x) , unique(scoreExp$y) , mapList$mapImage, levels = BREAKS)
levCL = sapply(CL, function(cs){cs$level})
CL = CL[levCL != 0]
## EXTRACT CONTOUR LINE LEVELS
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
## CONVERT CONTOUR LINES TO POLYGONS
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
fillO = 0.5*rep.int(1, length(LEVS))
LEVS2 =  as.numeric(as.character(LEVS)) # Sometimes R!
fillO[LEVS2==0]=0
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>%
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>%
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
BREAKS = c(seq(-40,40,by=10),-5,5,1,-1,-0.1,0.1)
CL <- contourLines(unique(scoreExp$x) , unique(scoreExp$y) , mapList$mapImage, levels = BREAKS)
levCL = sapply(CL, function(cs){cs$level})
# CL = CL[levCL != 0]
## EXTRACT CONTOUR LINE LEVELS
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
## CONVERT CONTOUR LINES TO POLYGONS
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
fillO = 0.5*rep.int(1, length(LEVS))
LEVS2 =  as.numeric(as.character(LEVS)) # Sometimes R!
fillO[LEVS2==0]=0
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>%
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
levCL
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
?addPolygons
BREAKS = c(seq(-40,40,by=10),-5,5,1,-1,-0.1,0.1)
CL <- contourLines(unique(scoreExp$x) , unique(scoreExp$y) , mapList$mapImage, levels = BREAKS)
#levCL = sapply(CL, function(cs){cs$level})
#CL = CL[levCL != 0]
## EXTRACT CONTOUR LINE LEVELS
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
## CONVERT CONTOUR LINES TO POLYGONS
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
fillO = 0.5*rep.int(1, length(LEVS))
LEVS2 =  as.numeric(as.character(LEVS)) # Sometimes R!
fillO[LEVS2==0]=0
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = LEVS, fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
fillO = 0.5*rep.int(1, length(LEVS))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = LEVS, fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = LEVS, fillColor = LEVS, fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(fillColor = LEVS, fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(fillColor = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
#addPolygons(fillColor = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
addPolylines()
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
#addPolygons(fillColor = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
addPolylines(color = sommer::jet.colors(NLEV, NULL)[LEVS])
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
#addPolygons(fillColor = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
addPolylines(color = sommer::jet.colors(NLEV, NULL)[LEVS], fill =T)
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(fillColor = sommer::jet.colors(NLEV, NULL)[LEVS[1:10]], fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
#addPolylines(color = sommer::jet.colors(NLEV, NULL)[LEVS], fill =T)
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(fillColor = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
#addPolylines(color = sommer::jet.colors(NLEV, NULL)[LEVS], fill =T)
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
LEVS[1:10]
NLEV
LEVS[-1]
LEVS[]
LEVS[length(LEVS):1]
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(fillColor = sommer::jet.colors(NLEV, NULL)[LEVS[length(LEVS):1]], fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
#addPolylines(color = sommer::jet.colors(NLEV, NULL)[LEVS], fill =T)
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(fillColor = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
#addPolylines(color = sommer::jet.colors(NLEV, NULL)[LEVS], fill =T)
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
fillO[LEVS2>10]=0
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(fillColor = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
#addPolylines(color = sommer::jet.colors(NLEV, NULL)[LEVS], fill =T)
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
fillO = 0.5*rep.int(1, length(LEVS))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(fillColor = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
#addPolylines(color = sommer::jet.colors(NLEV, NULL)[LEVS], fill =T)
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
#addPolylines(color = sommer::jet.colors(NLEV, NULL)[LEVS], fill =T)
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
fillO = 0.5*rep.int(1, length(LEVS))
LEVS2 =  as.numeric(as.character(LEVS)) # Sometimes R!
fillO[LEVS2>5]=0
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
#addPolylines(color = sommer::jet.colors(NLEV, NULL)[LEVS], fill =T)
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO, smoothFactor = 0.2) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
#addPolylines(color = sommer::jet.colors(NLEV, NULL)[LEVS], fill =T)
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO, noClip = T) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
#addPolylines(color = sommer::jet.colors(NLEV, NULL)[LEVS], fill =T)
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO, noClip = F) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
#addPolylines(color = sommer::jet.colors(NLEV, NULL)[LEVS], fill =T)
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
?pal
??pal
CL[1]
CL[2]
CL[10]
bleh CL[[10]]
bleh = CL[[10]]
ggplot(bleh) + geom_point(aes(x=x,y=y))
bleh2 = data.frame(bleh[2:3])
ggplot(bleh2) + geom_point(aes(x=x,y=y))
CL[52]
CL[25]
levCL
bleh = CL[[55]]
bleh2 = data.frame(bleh[2:3])
ggplot(bleh2) + geom_point(aes(x=x,y=y))
# fillO[LEVS2>0] = 0
# With bars
leaflet(spgons) %>% #addTiles() %>%
# addPolygons(color = heat.colors(NLEV, NULL)[LEVS], fillOpacity = 0.5) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS], fillOpacity = fillO, opacity = fillO) %>% # color = sommer::jet.colors(NLEV, NULL)[LEVS]
#addPolylines(color = sommer::jet.colors(NLEV, NULL)[LEVS], fill =T)
addCircles(lng = score$lon, lat = score$lat,
radius = abs(score$val), opacity = 1, col = score$col, fillOpacity = 1, label = lapply(score$label,HTML),
labelOptions = list(textsize = "15px"))
c1 = list(level = 10, x = c(0,0,2,2), y = c(0,2,2,0))
CL = list(c1)
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>% addPolygons()
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>%
addPolygons(sommer::jet.colors(NLEV, NULL)[LEVS])
c1 = list(level = 10, x = c(0,0,2,2), y = c(0,2,2,0))
CL = list(c1)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>%
addPolygons(sommer::jet.colors(NLEV, NULL)[LEVS])
c2 = list(level = -10, x = c(0,0,2,2) + 3, y = c(0,2,2,0))
CL = list(c1,c2)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>%
addPolygons(sommer::jet.colors(NLEV, NULL)[LEVS])
leaflet(spgons) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS])
c2 = list(level = -10, x = c(0,0,2,2) + 2.5, y = c(0,2,2,0))
CL = list(c1,c2)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS])
c2 = list(level = -5, x = c(0,0,2,2) + 2.5, y = c(0,2,2,0))
c3 = list(level = -5, x = c(0,0,2,2)/2 + 0.5, y = c(0,2,2,0)/2)
CL = list(c1,c2,c3)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS])
c3 = list(level = -5, x = c(0,0,2,2)/2 + 0.5, y = c(0,2,2,0)/2 + 0.5)
CL = list(c1,c2,c3)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS])
sapply(CL, `[[`, "level")
c1 = list(level = 20, x = c(0,0,2,2), y = c(0,2,2,0))
c2 = list(level = -5, x = c(0,0,2,2) + 2.5, y = c(0,2,2,0))
c3 = list(level = -5, x = c(0,0,2,2)/2 + 0.5, y = c(0,2,2,0)/2 + 0.5)
CL = list(c1,c2,c3)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS])
c1 = list(level = 01, x = c(0,0,2,2), y = c(0,2,2,0))
c1 = list(level = 10, x = c(0,0,2,2), y = c(0,2,2,0))
c2 = list(level = -10, x = c(0,0,2,2) + 2.5, y = c(0,2,2,0))
c3 = list(level = -10, x = c(0,0,2,2)/2 + 0.5, y = c(0,2,2,0)/2 + 0.5)
CL = list(c1,c2,c3)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS])
c1 = list(level = 10, x = c(0,0,2,2), y = c(0,2,2,0))
c2 = list(level = -10, x = c(0,0,2,2) + 2, y = c(0,2,2,0))
c3 = list(level = -10, x = c(0,0,2,2)/2 + 1, y = c(0,2,2,0)/2 + 0.5)
CL = list(c1,c2,c3)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS])
leaflet(spgons) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS], opacity = 0)
c1 = list(level = 10, x = c(0,0,2,2), y = c(0,2,2,0))
c2 = list(level = -10, x = c(0,0,2,2) + 2, y = c(0,2,2,0))
c3 = list(level = -10, x = c(0,0,2,2)/2 + 1, y = c(0,2,2,0)/2 + 0.5)
CL = list(c1,c2,c3)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>%
addPolygons(color = sommer::jet.colors(NLEV, NULL)[LEVS], opacity = 0)
rm(list =ls())
runApp("C:/Users/jqmt/Desktop/jens/drinkioso/")
# install.packages("rsconnect")
library(rsconnect)
setwd()
getwd()
setwd("C:/Users/jqmt/Desktop/jens/drinkioso/")
# rsconnect::deployApp('C:/Users/jqmt/Desktop/jens/LJSoftware/overView/')
#rsconnect::deployApp('C:\\Users\\jqmt\\Desktop\\jens\\LJSoftware\\overView\\')
deployApp()
